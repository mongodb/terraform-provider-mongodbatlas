name: 'Test Suite'

# Runs acceptance and migrations tests with a set of terraform versions and provider versions (used for migration tests). This worflow is scheduled daily except Saturdays, but can also be run manually.
on:
  workflow_dispatch:
    inputs:
      terraform_matrix:
        description: 'Terraform version matrix (JSON array)'
        default: '["1.9.x", "1.8.x", "1.7.x", "1.6.x", "1.5.x", "1.4.x", "1.3.x"]'
      provider_matrix:
        description: 'Previous MongoDB Atlas Provider version matrix for migration tests (JSON array)'
        default: '[""]' # "" for latest version
      send_notification:
        description: 'Send the Slack notification if any of the tests fail.'
        type: boolean
        default: false
  workflow_call:
    inputs:
      terraform_matrix:
        description: 'Terraform version matrix (JSON array)'
        type: string
      provider_matrix:
        description: 'Previous MongoDB Atlas Provider version matrix for migration tests (JSON array)'
        type: string
        default: '[""]' # "" for latest version
      atlas_cloud_env:
        description: 'Atlas cloud environment used, can be either `dev` or `qa`, empty for `dev`'     
        type: string
        required: false
      send_notification:
        description: 'Send the Slack notification if any of the tests fail.'
        type: boolean
        default: true

  schedule:
    # https://crontab.guru/#0_0_2-31_*_0
    - cron: "0 0 2-31 * 1-6" # workflow runs at 00:00 on every day-of-month from 2 through 31 and on every day-of-week from Monday through Saturday.
    - cron: "0 0 2-31 * 0" # workflow runs at 00:00 on every day-of-month from 2 through 31 and on Sunday.
   
concurrency:
  group: '${{ github.workflow }}'
  cancel-in-progress: false
   
jobs:
  versions:
    env:
      schedule_terraform_matrix: '["${{ vars.TF_VERSION_LATEST }}"]'
      schedule_provider_matrix: '[""]' # "" for latest version    
    runs-on: ubuntu-latest
    outputs:
      terraform_matrix: ${{ inputs.terraform_matrix || env.schedule_terraform_matrix }}
      provider_matrix: ${{ inputs.provider_matrix || env.schedule_provider_matrix }}
    steps:
      - if: false
        run: echo jobs need steps

  clean-before:
    secrets: inherit
    uses: ./.github/workflows/cleanup-test-env.yml

  tests:
    needs: [clean-before, versions]
    if: ${{ !cancelled() }}
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        terraform_version: ${{ fromJSON(needs.versions.outputs.terraform_matrix) }}
        provider_version: ${{ fromJSON(needs.versions.outputs.provider_matrix) }}
    name: tests-${{ matrix.terraform_version || 'latest' }}-${{ matrix.provider_version || 'latest' }}
    secrets: inherit
    uses: ./.github/workflows/acceptance-tests.yml
    with:
      terraform_version: ${{ matrix.terraform_version }}
      provider_version: ${{ matrix.provider_version }}
      atlas_cloud_env: ${{ inputs.atlas_cloud_env || github.event.schedule == '0 0 2-31 * 0' && 'qa' || 'dev' }}

  clean-after:
    needs: tests
    if: ${{ !cancelled() }}
    secrets: inherit
    uses: ./.github/workflows/cleanup-test-env.yml
  
  slack-notification:
    needs: [tests, clean-after]
    if: ${{ !cancelled() && needs.tests.result == 'failure' && !contains(github.event.inputs.send_notification, 'false') }}
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Send Slack message
        id: slack
        uses: slackapi/slack-github-action@37ebaef184d7626c5f204ab8d3baff4262dd30f0
        with:
          payload: |
            {
              "text": ":red_circle: Test Suite failed (reminder to log failures)",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Test Suite failed (reminder to log failures)* ${{ secrets.SLACK_ONCALL_TAG }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                        "type": "button",
                        "text": {
                            "type": "plain_text",
                            "text": ":github: Failed action"
                        },
                        "url": "${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}"
                    }
                ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
