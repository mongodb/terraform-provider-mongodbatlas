name: 'Update dev branches'

on:
  workflow_dispatch:
    inputs:
      branches:
        description: 'Dev branch names to update from master'
        default: '["CLOUDP-320243-dev-2.0.0"]'
  schedule:
    - cron: "0 5 * * 3" # workflow runs every Wednesday at 5 AM UTC

concurrency:
  group: '${{ github.workflow }}'
  cancel-in-progress: false
   
jobs:
  update-branches:
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(inputs.branches || '["CLOUDP-320243-dev-2.0.0"]') }} # scheduled branches go here
    name: ${{ matrix.branch }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        fetch-depth: 0
    
    - name: Config Git
      run: |
        git config --local user.email svc-api-experience-integrations-escalation@mongodb.com
        git config --local user.name svc-apix-bot
    
    - name: Merge branch with master
      id: merge-check
      run: |
        echo "Updating branch: ${{ matrix.branch }}"
        
        if ! git ls-remote --heads origin ${{ matrix.branch }} | grep -q ${{ matrix.branch }}; then
          echo "ERROR: Branch ${{ matrix.branch }} does not exist."
          exit 1
        fi
        
        git fetch origin master
        git fetch origin ${{ matrix.branch }}        
        git checkout -B ${{ matrix.branch }} origin/${{ matrix.branch }}
        
        # Check if there are commits in master not in dev branch
        commits_to_merge=$(git rev-list --count origin/${{ matrix.branch }}..origin/master)
        if [ "$commits_to_merge" -eq 0 ]; then
          echo "OK: No commits to merge from master. Branch is already up to date."
          echo "has-changes=false" >> "${GITHUB_OUTPUT}"
        else
          echo "Found $commits_to_merge commits to merge from master."
          if git merge origin/master --no-edit; then
            echo "OK: Merge completed successfully with no conflicts."
            echo "has-changes=true" >> "${GITHUB_OUTPUT}"
          else
            echo "ERROR: Merge conflicts detected. Manual intervention required:"
            echo "1. Perform a manual merge of master into ${{ matrix.branch }}"
            echo "2. Resolve all conflicts manually"
            echo "3. Add a bypass in dev branch ruleset settings to allow direct push to ${{ matrix.branch }}"
            echo "4. Push changes directly to ${{ matrix.branch }} (DO NOT create a PR)"
            echo "5. Remove the bypass from ruleset settings"
            echo "NOTE: Do not create a PR - squashed commits will cause the same conflicts to appear again in future updates"
            git merge --abort
            exit 1
          fi
        fi

    - name: Push updated branch
      if: steps.merge-check.outputs.has-changes == 'true'
      run: |
        echo "Pushing updated branch ${{ matrix.branch }} to remote"
        git push origin ${{ matrix.branch }}

    - name: Send Slack notification on success
      if: steps.merge-check.outputs.has-changes == 'true'
      uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          {
            "text": "Dev branch updated successfully",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "✅ *Dev branch `${{ matrix.branch }}` updated successfully* with latest changes from master ${{ secrets.SLACK_ONCALL_TAG }} <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|View Action>"
                }
              }
            ]
          }

  slack-notification:
    needs: update-branches
    if: ${{ !cancelled() && needs.update-branches.result == 'failure' }}
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Send Slack notification on failure
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "Update dev branches failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ *Update dev branches failed* ${{ secrets.SLACK_ONCALL_TAG }} <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|View Failed Action>"
                  }
                }
              ]
            }
