name: Examples Checks
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - .github/workflows/examples.yml
      - examples/**

env:
  AWS_DEFAULT_REGION: us-west-2

jobs:
  validate-terraform:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        terraform_version: ["0.13.0"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # See also: https://github.com/actions/setup-go/pull/62
      - run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: go build
        run: go build -o terraform-plugin-dir/terraform-provider-mongodbatlas-dev_v99.99.99_x5 .
      - name: override plugin
        run: |
          # For newer versions
          mkdir -p ~/.terraform.d/plugins/registry.terraform.io/hashicorp/mongodbatlas-dev/99.99.99/$(go env GOOS)_$(go env GOARCH)/
          cp terraform-plugin-dir/terraform-provider-mongodbatlas-dev_v99.99.99_x5 ~/.terraform.d/plugins/registry.terraform.io/hashicorp/mongodbatlas-dev/99.99.99/$(go env GOOS)_$(go env GOARCH)/
      - name: replace names of provider for local development
        run: grep --include=\*.tf -rnl './examples' -e 'source = "mongodb/mongodbatlas"'  | xargs  sed -i s@mongodb/mongodbatlas@hashicorp/mongodbatlas-dev@g
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform_version }}
          # Needed to use the output of `terraform validate -json`
          terraform_wrapper: false
      - name: install tflint
        run: go install github.com/terraform-linters/tflint@v0.31.0
      - name: terraform
        run: |
          for DIR in $(find ./examples -type f -name '*.tf' -exec dirname {} \; | sort -u); do
              pushd "${DIR}"
              if [ -f terraform.template.tfvars ]; then
                cp terraform.template.tfvars terraform.tfvars
              fi
              echo; echo -e "\e[1;35m===> Initializing Example: $DIR <===\e[0m"; echo
              terraform init
              echo; echo -e "\e[1;35m===> Format Checking Example: $DIR <===\e[0m"; echo
              terraform fmt -check
              echo; echo -e "\e[1;35m===> Validating Example: $DIR <===\e[0m"; echo
              # Catch errors
              terraform validate
              # Terraform syntax checks
              tflint \
                --enable-rule=terraform_deprecated_interpolation \
                --enable-rule=terraform_deprecated_index \
                --enable-rule=terraform_unused_declarations \
                --enable-rule=terraform_comment_syntax \
                --enable-rule=terraform_required_version
              popd
            done
