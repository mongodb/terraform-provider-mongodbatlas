name: 'Code Health'

# Set of validations run on each pull request and merged commits to master.
on:
  push:
    branches:
      - master
    paths-ignore: # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-excluding-paths
      - '*.md'
      - 'examples/**'
      - 'LICENSE'
  pull_request: {}
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633

    - uses: lhotari/action-upterm@v1
      env:
        ASSIGNEE_JIRA_TICKET: ${{ secrets.ASSIGNEE_JIRA_TICKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_EVENTBRIDGE_ACCOUNT_ID: ${{ secrets.AWS_EVENTBRIDGE_ACCOUNT_ID }}
        AWS_S3_BUCKET_FEDERATION: ${{ secrets.AWS_S3_BUCKET_FEDERATION }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        CA_CERT: ${{ secrets.CA_CERT }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        MONGODB_ATLAS_LDAP_CA_CERTIFICATE: ${{ secrets.MONGODB_ATLAS_LDAP_CA_CERTIFICATE }}
        MONGODB_ATLAS_LDAP_HOSTNAME: ${{ secrets.MONGODB_ATLAS_LDAP_HOSTNAME }}
        MONGODB_ATLAS_LDAP_PASSWORD: ${{ secrets.MONGODB_ATLAS_LDAP_PASSWORD }}
        MONGODB_ATLAS_LDAP_PORT: ${{ secrets.MONGODB_ATLAS_LDAP_PORT }}
        MONGODB_ATLAS_LDAP_USERNAME: ${{ secrets.MONGODB_ATLAS_LDAP_USERNAME }}
        MONGODB_ATLAS_PRIVATE_ENDPOINT_DNS_NAME: ${{ secrets.MONGODB_ATLAS_PRIVATE_ENDPOINT_DNS_NAME }}
        MONGODB_ATLAS_PRIVATE_ENDPOINT_ID: ${{ secrets.MONGODB_ATLAS_PRIVATE_ENDPOINT_ID }}
        MONGODB_ATLAS_PRIVATE_KEY_CLOUD_DEV: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY_CLOUD_DEV }}
        MONGODB_ATLAS_PRIVATE_KEY_CLOUD_QA: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY_CLOUD_QA }}
        MONGODB_ATLAS_PUBLIC_KEY_CLOUD_DEV: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY_CLOUD_DEV }}
        MONGODB_ATLAS_PUBLIC_KEY_CLOUD_QA: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY_CLOUD_QA }}
        PASSPHRASE: ${{ secrets.PASSPHRASE }}
      with:
        limit-access-to-actor: true
        limit-access-to-users: lantoli
        wait-timeout-minutes: 30


    - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
      with:
        go-version-file: 'go.mod'
    - name: Mock generation
      run: make tools generate-mocks
    - name: Check for uncommited files
      run: |
        FILES=$(git ls-files -o -m --directory --exclude-standard --no-empty-directory)
        LINES=$(echo "$FILES" | awk 'NF' | wc -l)
        if [ "${LINES}" -ne 0 ]; then
          echo "Detected files that need to be committed:"
          echo "${FILES//^/ }"
          echo ""
          echo "Mock skeletons are not up-to-date, you may have forgotten to run mockery before committing your changes."
          exit 1
        fi
    - name: Build
      run: make build
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Permission is required to use sticky-pull-request-comment. See https://github.com/marocchino/sticky-pull-request-comment?tab=readme-ov-file#error-resource-not-accessible-by-integration
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version-file: 'go.mod'
      - name: Unit Test
        run: make test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Install Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version-file: 'go.mod'
          cache: false # see https://github.com/golangci/golangci-lint-action/issues/807
      - name: golangci-lint
        uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804
        with:
          version: v1.56.2
      - name: actionlint
        run: | 
          make tools 
          actionlint -verbose -color
        shell: bash  
  website-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version-file: 'go.mod'
      - name: website lint
        run: make tools && make website-lint
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Run ShellCheck
        uses: bewuethr/shellcheck-action@d01912909579c4b1a335828b8fca197fbb8e0aa4
  call-acceptance-tests-workflow:
    needs: [build, lint, shellcheck, unit-test, website-lint]
    secrets: inherit
    uses: ./.github/workflows/acceptance-tests.yml
  call-migration-tests-workflow:
    needs: [build, lint, shellcheck, unit-test, website-lint]
    secrets: inherit
    uses: ./.github/workflows/migration-tests.yml

