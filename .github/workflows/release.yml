name: 'New Release'
run-name: 'Release ${{ inputs.version_number }} (skip tests: ${{ inputs.skip_tests }}, use existing tag: ${{ inputs.use_existing_tag}})'

# Used for creating a new release. This workflow will run qa acceptance tests, create a new tag, and generate the release with GoReleaser.
on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number (e.g., v1.0.0, v1.0.0-pre, v1.0.0-pre1)'
        required: true
      skip_tests:
        description: 'Set value to `true` to skip QA acceptance tests, default is `false`'
        default: 'false'
      use_existing_tag:
        description: 'Set value to `true` to use an existing tag for the release process, default is `false`'
        default: 'false'

jobs:
  generate-ssdlc-report:
    uses: ./.github/workflows/run-script-and-commit.yml
    with:
      script_call: |
        TAG="${{ inputs.version_number }}"
        VERSION="${TAG#v}"
        AUTHOR="${{ github.actor }}"
        export AUTHOR VERSION
        ./scripts/gen-ssdlc-report.sh
      file_to_commit: 'compliance/v*/ssdlc-compliance-*.md'
      commit_message: "chore: Update SSDLC report for ${{ inputs.version_number }}"
    secrets:
      apix_bot_pat: ${{ secrets.APIX_BOT_PAT }}
      remote: https://svc-apix-bot:${{ secrets.APIX_BOT_PAT }}@github.com/${{ github.repository }}
      gpg_private_key: ${{ secrets.APIX_BOT_GPG_PRIVATE_KEY }}
      passphrase: ${{ secrets.APIX_BOT_PASSPHRASE }}