name: 'New Release'
run-name: 'Release Test ${{ inputs.version_number }} (skip tests: ${{ inputs.skip_tests }}, use existing tag: ${{ inputs.use_existing_tag}})'

# Used for creating a new release. This workflow will run qa acceptance tests, create a new tag, and generate the release with GoReleaser.
on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number (e.g., v1.0.0, v1.0.0-pre, v1.0.0-pre1)'
        required: true
      skip_tests:
        description: 'Set value to `true` to skip QA acceptance tests, default is `false`'
        default: 'false'
      use_existing_tag:
        description: 'Set value to `true` to use an existing tag for the release process, default is `false`'
        default: 'false'

jobs:

  release-config:
    runs-on: ubuntu-latest
    outputs:
      creates_new_tag: ${{ steps.evaluate_inputs.outputs.creates_new_tag }}
      is_official_release: ${{ steps.evaluate_inputs.outputs.is_official_release }}
      runs_tests: ${{ steps.evaluate_inputs.outputs.runs_tests }}
    steps:
      - id: evaluate_inputs
        run: |
          {
            echo "creates_new_tag=$(if [ '${{ inputs.use_existing_tag }}' = 'true' ]; then echo 'false'; else echo 'true'; fi)"
            echo "is_official_release=$(if echo '${{ inputs.version_number }}' | grep -q 'pre'; then echo 'false'; else echo 'true'; fi)"
            echo "runs_tests=$(if [ '${{ inputs.skip_tests }}' = 'true' ]; then echo 'false'; else echo 'true'; fi)"
          } >> "$GITHUB_OUTPUT"
  
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633

  jira-release-version:
    needs: [ release-config, release ]
    # if release job is skipped, cancelled, or failed we do not run this job
    if: >-
      !cancelled()
      && needs.release.result == 'success'
      && needs.release-config.outputs.is_official_release == 'true'
    secrets: inherit
    uses: ./.github/workflows/jira-release-version.yml
    with:
      version_number: ${{ inputs.version_number }}
