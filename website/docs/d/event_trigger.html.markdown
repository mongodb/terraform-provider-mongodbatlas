---
layout: "mongodbatlas"
page_title: "MongoDB Atlas: event_trigger"
sidebar_current: "docs-mongodbatlas-datasource-event-trigger"
description: |-
    Describes an Event Trigger.
---

# mongodbatlas_event_trigger

`mongodbatlas_event_trigger` describe an Event Trigger. 

## Example Usage

```terraform
resource "mongodbatlas_event_trigger" "test" {
  project_id = "PROJECT ID"
  app_id = "APPLICATION ID"
  name = "NAME OF THE TRIGGER"
  type = "DATABASE"
  function_id = "1"
  disabled = false
  config_operation_types = ["INSERT", "UPDATE"]
  config_database = "DATABASE NAME"
  config_collection = "COLLECTION NAME"
  config_service_id = "1"
  config_match {
    key = "KEY",
    value = "EXPRESSION"
  }
  config_full_document = false
}

data "mongodbatlas_event_trigger" "test" {
  project_id = mongodbatlas_event_trigger.test.project_id
  app_id   = mongodbatlas_event_trigger.test.app_id
  trigger_id   = mongodbatlas_event_trigger.test.id
}
```

## Argument Reference

* `project_id` - (Required) The unique ID for the project to create the trigger.
* `app_id` - (Required) The ObjectID of your application.
* `trigger_id` - (Required) The unique ID of the trigger.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Autogenerated Unique ID for this data source.
* `name` - The name of the trigger.
* `type` - The type of the trigger.
* `function_id` - The ID of the function associated with the trigger.
* `function_name` - The name of the function associated with the trigger.
* `function_id` - The ID of the function associated with the trigger.
* `disabled` - Status of a trigger.
* `config_operation_types` - The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
* `config_operation_type` - The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
* `config_providers` - A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
* `config_database` - The name of the MongoDB database that contains the watched collection.
* `config_collection` - The name of the MongoDB collection that the trigger watches for change events.
* `config_service_id` - The ID of the MongoDB Service associated with the trigger.
* `config_match` - A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger. 
* `config_project` - A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects. 
* `config_full_document` - If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
* `unordered` - Only Available for Database Triggers. If true, event ordering is disabled and this trigger can process events in parallel. If false, event ordering is enabled and the trigger executes serially.
* `config_schedule` - A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
* `event_processors` - An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
* `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
* `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.


See [MongoDB Realm API](https://docs.mongodb.com/realm/admin/api/v3/#get-/groups/%7Bgroupid%7D/apps/%7Bappid%7D/triggers/%7Btriggerid%7D) Documentation for more information.