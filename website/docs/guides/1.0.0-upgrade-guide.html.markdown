---
layout: "mongodbatlas"
page_title: "MongoDB Atlas Provider 1.0.0: Upgrade and Information Guide"
sidebar_current: "docs-mongodbatlas-guides-100-upgrade-guide"
description: |-
    MongoDB Atlas Provider 0.1.0: Upgrade and Information Guide
---

# MongoDB Atlas Provider 1.0.0: Upgrade and Information Guide

## End of Life and removal of Project IP Whitelist and import with Project IP Access List

To upgrade from v0.9.1 to v1.0.0 with the existing resources `mongodbatlas_project_ip_whitelist`
perform the following steps

1. Remove your existing `mongodbatlas_project_ip_whitelist` resources from terraform state
   **NOTE** before doing any terraform state change please do a backup

```bash
$ terraform state rm mongodbatlas_project_ip_whitelist.test
```

2. Change the version of provider to the v1.0.0

3. Perform an import from your existing `mongodbatlas_project_ip_whitelist` to `mongodbatlas_project_ip_access_list`
```bash
    terraform import mongodbatlas_project_ip_access_list.test <project_id>-<entry>
```

4. Do a terraform plan (no changes detected)

```bash
terraform plan

(...)


No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration and found no differences,
so no changes are needed.
```
**NOTE** Doc links for [mongodbatlas_project_ip_access_list](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/project_ip_access_list)

## End of Life and removal of Private Endpoint and Private Endpoint Interface Link and import with PrivateLink Endpoint and PrivateLink Endpoint Service

To upgrade from v0.9.1 to v1.0.0 with the existing resources `mongodbatlas_private_endpoint` and `mongodbatlas_private_endpoint_interface_link`
perform the following steps

1. Remove your existing `mongodbatlas_private_endpoint` and `mongodbatlas_private_endpoint_interface_link` resources from terraform state
   **NOTE** before doing any terraform state change please do a backup

```bash
$ terraform state rm mongodbatlas_private_endpoint.test
$ terraform state rm mongodbatlas_private_endpoint_interface_link.test
```

2. Change the version of provider to the v1.0.0

3. Perform an import from your existing `mongodbatlas_private_endpoint` to `mongodbatlas_privatelink_endpoint` and from `mongodbatlas_private_endpoint_interface_link` to `mongodbatlas_privatelink_endpoint_service`
```bash
    terraform import mongodbatlas_privatelink_endpoint.test <project_id>-<private_link_id>-<provider_name>-<region>
    terraform import mongodbatlas_privatelink_endpoint_service.test <project_id>--<private_link_id>--<endpoint_service_id>--<provider_name>
```

4. Do a terraform plan (no changes detected)

```bash
terraform plan

(...)


No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration and found no differences,
so no changes are needed.
```
**NOTE** Doc links for [mongodbatlas_privatelink_endpoint](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/privatelink_endpoint)
**NOTE** Doc links for [mongodbatlas_privatelink_endpoint_service](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/privatelink_endpoint_service)

## Migration to Terraform SDK v2

- Due to the migration to Terraform SDK v2 various resources and datasource(s) have been impacted and will require a change within your configuration. These resources and datasources used the now unsupported TypeMap object. In SDK v2 these must be TypeSet or TypeList with MaxItems set to 1. The following is the list of resources and datasources impacted by the migration.

### Alert Configuration
- Fields Affected:
    - metric_threshold (deprecated), use metric_threshold_config instead
    - threshold (deprecated), use threshold_confing instead

Old usage:
```terraform
metric_threshold = {
  metric_name = "ASSERT_REGULAR"
  operator    = "LESS_THAN"
  threshold   = 1.0
  units       = "RAW"
  mode        = "AVERAGE"
}

threshold = {
    operator    = "LESS_THAN"
    threshold   = 72
    units       = "HOURS"
  }

```

New usage:
```terraform
metric_threshold_config {
  metric_name = "ASSERT_REGULAR"
  operator    = "LESS_THAN"
  threshold   = 1.0
  units       = "RAW"
  mode        = "AVERAGE"
}

threshold_config {
    operator    = "LESS_THAN"
    threshold   = 72
    units       = "HOURS"
  }

```

### Cloud Provider Access Authorization
- Fields Affected:
    - aws (deprecated), use aws_config instead

Old usage:
```terraform
aws = {
  iam_assumed_role_arn = aws_iam_role.test_role.arn
}
```

New usage:
```terraform
aws_config {
  iam_assumed_role_arn = aws_iam_role.test_role.arn
}
```

### Cloud Provider Snapshot Restore Job
- Fields Affected:
    - delivery_type (deprecated), use delivery_type_config instead

Old usage:
```terraform
delivery_type  = {
  point_in_time       = true
  target_cluster_name = mongodbatlas_cluster.target_cluster.name
  target_project_id   = ""
}
```

New usage:
```terraform
delivery_type_config   {
  point_in_time       = true
  target_cluster_name = mongodbatlas_cluster.target_cluster.name
  target_project_id   = ""
}
```

### Encryption at rest
- Fields Affected:
    - aws_kms (deprecated), use aws_kms instead
    - azure_key_vault (deprecated), use azure_key_vault instead
    - google_cloud_kms (deprecated), use google_cloud_kms instead

Old usage:
```terraform

aws_kms = {
  enabled                = true
  access_key_id          = ""
  secret_access_key      = ""
  customer_master_key_id = ""
  region                 = ""
}

azure_key_vault = {
  enabled             = true
  client_id           = ""
  azure_environment   = ""
  subscription_id     = ""
  resource_group_name = ""
  key_vault_name  	  = ""
  key_identifier  	  = ""
  secret  			  = ""
  tenant_id  		  = ""
}

google_cloud_kms = {
  enabled                 = true
  service_account_key     = ""
  key_version_resource_id = ""
}
```

New usage:
```terraform
aws_kms_config {
  enabled                = true
  access_key_id          = ""
  secret_access_key      = ""
  customer_master_key_id = ""
  region                 = ""
}

azure_key_vault_config {
  enabled             = true
  client_id           = ""
  azure_environment   = ""
  subscription_id     = ""
  resource_group_name = ""
  key_vault_name  	  = ""
  key_identifier  	  = ""
  secret  			  = ""
  tenant_id  		  = ""
}

google_cloud_kms_config {
  enabled                 = true
  service_account_key     = ""
  key_version_resource_id = ""
}
```

### Helpful Links

* [Report bugs](https://github.com/mongodb/terraform-provider-mongodbatlas/issues)

* [Request Features](https://feedback.mongodb.com/forums/924145-atlas?category_id=370723)

* [Contact Support](https://docs.atlas.mongodb.com/support/) covered by MongoDB Atlas support plans, Developer and above.