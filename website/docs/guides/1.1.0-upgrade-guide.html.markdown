---
layout: "mongodbatlas"
page_title: "MongoDB Atlas Provider 1.0.0: Upgrade and Information Guide"
sidebar_current: "docs-mongodbatlas-guides-100-upgrade-guide"
description: |-
MongoDB Atlas Provider 1.1.0: Upgrade and Information Guide
---

# MongoDB Atlas Provider 1.1.0: Upgrade and Information Guide

The Terraform MongoDB Atlas Provider version 1.1.0 has a number of new and exciting features and changes.

New Features:

* You can now manage multi-cloud deployments with [`mongodbatlas_advanced_clusters`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/advanced_clusters).
* You can now manage invitations with
[`mongodbatlas_org_invitation`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/org_invitation) and [`mongodbatlas_project_invitation`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/project_invitation).
* You can now use `project_owner_id` to set a default owner of projects that you create with [`mongodbatlas_project`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/project).
* [`mongodbatlas_privatelink_endpoint`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/privatelink_endpoint) and [`mongodbatlas_privatelink_endpoint_service`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/privatelink_endpoint_service) now support private endpoints on Google Cloud with Private Service Connect.
* You can now set `with_default_alerts_settings` to `false` to disable the default alerts when you create projects with [`mongodbatlas_project`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/project).
* [`mongodbatlas_search_index`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/search_index) now supports synonyms.
* You can now create Atlas Serverless deployments (available as a preview feature) with [`mongodbatlas_serverless_instance`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/serverless_instance).

Changes:

Version 1.1.0 deprecates the following resources:

* [`mongodbatlas_cloud_provider_snapshot`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/cloud_provider_snapshot)
* [`mongodbatlas_cloud_provider_snapshot_restore_job`](https://registry.terraform.io/providers/mongodb/mongodbatlas/latest/docs/resources/cloud_provider_snapshot_restore_job)

If your Terraform configuration uses these resources, see [Migration from Cloud Provider Snapshot to Cloud Backup Snapshot](#migration-from-cloud-provider-snapshot-to-cloud-backup-snapshot) to migrate to the new resources **before you upgrade**.  These resources will be removed in a future major version.

1.1.0 also includes general improvements and bug fixes. See the [CHANGELOG](https://github.com/mongodb/terraform-provider-mongodbatlas/blob/master/CHANGELOG.md) for more specific information.

## Migration from Cloud Provider Snapshot to Cloud Backup Snapshot

The term **Cloud Provider** has been deprecated in favor of the term **Cloud Backup**.  In order to support this change within the Terraform provider, related resources and data sources with the older terminology have been deprecated and new resources and data sources have been added to support the new terminology.  The deprecated resources and data sources will be removed in a future major version.   We recommend migrating to the new resources as soon as possible by selecting a method from one of the following two options:

### Option 1: Replace the name of resource in Terraform state

1. Replace the name of the deprecated resource `mongodbatlas_cloud_provider_snapshot` with the new name `mongodbatlas_cloud_backup_snapshot` in the Terraform state file (`terraform.tfstate`).  Do the same for `mongodbatlas_cloud_provider_snapshot_restore_job` and `mongodbatlas_cloud_backup_snapshot_restore_job`.
   **NOTE** Before performing any Terraform state change, please backup your state.

2. Upgrade the provider to v1.1.0.

3. Run a `terraform plan` to ensure no changes are detected.

```bash
terraform plan

(...)

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration and found no differences,
so no changes are needed.
```

### Option 2:  Remove the deprecated and import the new resources

1. Remove your existing `mongodbatlas_cloud_provider_snapshot` and `mongodbatlas_cloud_provider_snapshot_restore_job` resources from the Terraform state file.
   **NOTE** Before performing any Terraform state change, please backup your state.

```bash
$ terraform state rm mongodbatlas_cloud_provider_snapshot.test
$ terraform state rm mongodbatlas_cloud_provider_snapshot_restore_job.test

```

2. Upgrade the provider to v1.1.0.

3. Change your Terraform configuration file, replacing `mongodbatlas_cloud_provider_snapshot` with `mongodbatlas_cloud_backup_snapshot` and `mongodbatlas_cloud_provider_snapshot_restore_job` with `mongodbatlas_cloud_backup_snapshot_restore_job`.

4. Import your existing `mongodbatlas_cloud_provider_snapshot` to `mongodbatlas_cloud_backup_snapshot` and `mongodbatlas_cloud_provider_snapshot_restore_job` to `mongodbatlas_cloud_backup_snapshot_restore_job`:
```bash
    terraform import mongodbatlas_cloud_backup_snapshot.test <project_id>-<cluster_name>-<snapshot_id>
```
```bash
    terraform import mongodbatlas_cloud_backup_snapshot_restore_job.test <project_id>-<cluster_name>-<job_id>
```

5. Run a `terraform plan` to ensure no changes are detected.

```bash
terraform plan

(...)

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration and found no differences,
so no changes are needed.
```

### Helpful Links

* [Report bugs](https://github.com/mongodb/terraform-provider-mongodbatlas/issues)

* [Request Features](https://feedback.mongodb.com/forums/924145-atlas?category_id=370723)

* [Contact Support](https://docs.atlas.mongodb.com/support/) covered by MongoDB Atlas support plans, Developer and above.