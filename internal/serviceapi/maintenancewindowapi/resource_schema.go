// Code generated by terraform-provider-mongodbatlas using `make generate-resource`. DO NOT EDIT.

package maintenancewindowapi

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func ResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"auto_defer_once_enabled": schema.BoolAttribute{
				Computed:            true,
				Optional:            true,
				MarkdownDescription: "Flag that indicates whether MongoDB Cloud should defer all maintenance windows for one week after you enable them.",
			},
			"day_of_week": schema.Int64Attribute{
				Required:            true,
				MarkdownDescription: "One-based integer that represents the day of the week that the maintenance window starts.\n\n- `1`: Sunday.\n- `2`: Monday.\n- `3`: Tuesday.\n- `4`: Wednesday.\n- `5`: Thursday.\n- `6`: Friday.\n- `7`: Saturday.",
			},
			"group_id": schema.StringAttribute{
				Required:            true,
				MarkdownDescription: "Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.\n\n**NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.",
			},
			"hour_of_day": schema.Int64Attribute{
				Required:            true,
				MarkdownDescription: "Zero-based integer that represents the hour of the of the day that the maintenance window starts according to a 24-hour clock. Use `0` for midnight and `12` for noon.",
			},
			"number_of_deferrals": schema.Int64Attribute{
				Computed:            true,
				MarkdownDescription: "Number of times the current maintenance event for this project has been deferred.",
			},
			"protected_hours": schema.SingleNestedAttribute{
				Optional:            true,
				MarkdownDescription: "Defines the a window where maintenance will not begin within.",
				Attributes: map[string]schema.Attribute{
					"end_hour_of_day": schema.Int64Attribute{
						Optional:            true,
						MarkdownDescription: "Zero-based integer that represents the end hour of the of the day that the maintenance will not begin in.",
					},
					"start_hour_of_day": schema.Int64Attribute{
						Optional:            true,
						MarkdownDescription: "Zero-based integer that represents the beginning hour of the of the day that the maintenance will not begin in.",
					},
				},
			},
			"start_asap": schema.BoolAttribute{
				Optional:            true,
				MarkdownDescription: "Flag that indicates whether MongoDB Cloud starts the maintenance window immediately upon receiving this request. To start the maintenance window immediately for your project, MongoDB Cloud must have maintenance scheduled and you must set a maintenance window. This flag resets to `false` after MongoDB Cloud completes maintenance.",
			},
			"time_zone_id": schema.StringAttribute{
				Computed:            true,
				MarkdownDescription: "Identifier for the current time zone of the maintenance window. This can only be updated via the Project Settings UI.",
			},
		},
	}
}

type TFModel struct {
	GroupId              types.String `tfsdk:"group_id" autogen:"omitjson"`
	ProtectedHours       types.Object `tfsdk:"protected_hours"`
	TimeZoneId           types.String `tfsdk:"time_zone_id" autogen:"omitjson"`
	DayOfWeek            types.Int64  `tfsdk:"day_of_week"`
	HourOfDay            types.Int64  `tfsdk:"hour_of_day"`
	NumberOfDeferrals    types.Int64  `tfsdk:"number_of_deferrals" autogen:"omitjson"`
	AutoDeferOnceEnabled types.Bool   `tfsdk:"auto_defer_once_enabled"`
	StartAsap            types.Bool   `tfsdk:"start_asap"`
}
type TFProtectedHoursModel struct {
	EndHourOfDay   types.Int64 `tfsdk:"end_hour_of_day"`
	StartHourOfDay types.Int64 `tfsdk:"start_hour_of_day"`
}
