variables:
  - &go_linux_version
    go_base_path: ""
  - &go_env
    XDG_CONFIG_HOME: ${go_base_path}${workdir}
    GO111MODULE: "on"
    GOROOT: ${go_root}
    GOPATH: ${go_base_path}${workdir}
    ADD_PATH: "${go_bin}:${go_base_path}${workdir}/bin:${go_base_path}${workdir}/src/github.com/mongodb/terraform-provider-mongodbatlas/bin"
  - &go_options
    add_to_path:
      - ${go_bin}
      - ${go_base_path}${workdir}/bin
      - ${go_base_path}${workdir}/src/github.com/mongodb/terraform-provider-mongodbatlas/bin
    include_expansions_in_env:
      - go_base_path
      - workdir
    working_dir: src/github.com/mongodb/terraform-provider-mongodbatlas
    env:
      <<: *go_env

functions:
  "install gh cli":
    - command: shell.exec
      params:
        working_dir: ""
        script: |
          sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
          sudo dnf install -y gh

  "trace release artifacts":
    - command: shell.exec        
      params:
        working_dir: /tmp          
        script: |
          sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
          sudo dnf install -y gh

    - command: git.get_project
      params:
        directory: src/github.com/mongodb/terraform-provider-mongodbatlas
    
    - command: shell.exec
      params:
        working_dir: "src/github.com/mongodb/terraform-provider-mongodbatlas"
        shell: bash
        script: |
          export GH_TOKEN="${github_token}"

          git fetch --tags
          release_tag=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' | sort -rV | head -n1)

          max_attempts=9  # release can take longer if QA tests are run (>1 hour)
          sleep_interval=600

          echo "Waiting for 'release' job in workflow release.yml to succeed"

          for ((attempt = 1; attempt <= max_attempts; attempt++)); do
              echo "Poll #$attempt"

              # get the latest release workflow run
              run_id=$(gh run list --workflow release.yml --branch master --limit 1 --json databaseId --jq '.[0].databaseId')
              run_json=$(gh run view "$run_id" --json name,jobs)

              conclusion=$(jq -r '.jobs[] | select(.name=="release") | .conclusion' <<<"$run_json")
              version=$(jq -r '.name | match("v[0-9]+\\.[0-9]+\\.[0-9]+") | .string' <<<"$run_json")

              echo "conclusion=$conclusion   version=$version"

              # checking the latest tag version (that triggered this task) matches the version in the release workflow run name
              if [[ "$version" != "$release_tag" ]]; then
                  echo "ERROR: version from run name ($version) != release tag ($release_tag)"
                  exit 1
              fi

              if [[ "$conclusion" == "success" ]]; then
                  echo "✅ release job succeeded for $version"
                  break

              elif [[ "$conclusion" == "failure" || "$conclusion" == "cancelled" ]]; then
                  echo "❌ release job failed (conclusion: $conclusion)"
                  exit 1

              else
                  echo "Waiting for release to complete; sleeping $sleep_interval seconds"
                  sleep "$sleep_interval"
              fi
          done

          if ((attempt > max_attempts)) && [[ "$conclusion" != "success" ]]; then
              echo "ERROR: release job still not successful after $max_attempts polls"
              exit 1
          fi

          echo "Downloading provider artifacts for $version"
          mkdir -p release_artifacts
          gh release download "$release_tag" --pattern "terraform-provider-mongodbatlas*" --dir release_artifacts

          rm -f release_artifacts/[Ss]ource* || true

          count=$(find release_artifacts -name 'terraform-provider-mongodbatlas*' | wc -l)
          echo "Found $count files"
          ((count > 0)) || {
              echo "ERROR: no artifacts downloaded for $version"
              exit 1
          }

          cat >trace-expansions.yml <<EOF
          release_version: "$version"
          EOF

          echo "✅ Done."


    
    - command: expansions.update
      params:
        file: src/github.com/mongodb/terraform-provider-mongodbatlas/trace-expansions.yml
    
    - command: papertrail.trace
      params:
        key_id: ${papertrail_key_id}
        secret_key: ${papertrail_secret_key}
        product: "tmp2-terraform-provider-mongodbatlas"
        version: ${release_version}
        submitter: "svc-apix-Bot"
        filenames:
          - "src/github.com/mongodb/terraform-provider-mongodbatlas/release_artifacts/*.zip"

 
tasks:
  - name: trace_release_artifacts
    tags: ["release"]
    commands:
      - func: "trace release artifacts"

            
buildvariants:
  - name: papertrail_github_release
    display_name: "Papertrail - GitHub Release Artifacts"
    git_tag_only: true
    tags: ["release"]
    run_on:
      - rhel90-small
    expansions:
      <<: *go_linux_version
    tasks:
      - name: trace_release_artifacts
