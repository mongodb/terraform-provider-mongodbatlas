variables:
  - &go_linux_version
    go_root: "/opt/golang/go1.24"
    go_bin: "/opt/golang/go1.24/bin"
    go_base_path: ""
  - &go_windows_version
    go_root: "c:\\golang\\go1.24"
    go_bin: "c:\\golang\\go1.24\\bin"
    go_base_path: "c:"
  - &go_env
    XDG_CONFIG_HOME: ${go_base_path}${workdir}
    GO111MODULE: "on"
    GOROOT: ${go_root}
    GOPATH: ${go_base_path}${workdir}
    ADD_PATH: "${go_bin}:${go_base_path}${workdir}/bin:${go_base_path}${workdir}/src/github.com/mongodb/terraform-provider-mongodbatlas/bin"
  - &go_options
    add_to_path:
      - ${go_bin}
      - ${go_base_path}${workdir}/bin
      - ${go_base_path}${workdir}/src/github.com/mongodb/terraform-provider-mongodbatlas/bin
    include_expansions_in_env:
      - go_base_path
      - workdir
    working_dir: src/github.com/mongodb/terraform-provider-mongodbatlas
    env:
      <<: *go_env

functions:
  "trace artifacts":
    # First, checkout the repository
    - command: git.get_project
      params:
        directory: src/github.com/mongodb/terraform-provider-mongodbatlas
    
    # Check what files exist and create test files if needed
    - command: shell.exec
      params:
        working_dir: "src/github.com/mongodb/terraform-provider-mongodbatlas"
        script: |
           tag=$(git describe --tags --always --dirty)

           # remove the leading 'v' if present, otherwise use the tag as-is
           if [[ $tag == v* ]]; then
               version=$(echo "$tag" | cut -c 2-)
           else
               version="$tag"
           fi

           echo "Current directory contents:"
           ls -la
           
           echo "Looking for release artifacts..."
           # Check multiple possible locations for release artifacts
           find . -name "*.zip" -o -name "terraform-provider-mongodbatlas*" | head -10
           
           # Check if dist/ directory exists (common for GoReleaser)
           if [ -d "dist" ]; then
               echo "Contents of dist/ directory:"
               ls -la dist/
           fi
           
           # Check if bin/ directory exists
           if [ -d "bin" ]; then
               echo "Contents of bin/ directory:"
               ls -la bin/
           else
               echo "bin/ directory doesn't exist, creating it with test files..."
               mkdir -p bin
               # Create test files that match the expected pattern
               echo "test content" > "bin/terraform-provider-mongodbatlas_${version}_darwin_arm64.zip"
               echo "test content" > "bin/terraform-provider-mongodbatlas_${version}_darwin_amd64.zip"
               echo "test content" > "bin/terraform-provider-mongodbatlas_${version}_linux_amd64.zip"
               echo "test content" > "bin/terraform-provider-mongodbatlas_${version}_windows_amd64.zip"
               echo "Created test files in bin/"
               ls -la bin/
           fi

           cat <<EOT > trace-expansions.yml
           release_version: "$version"
           EOT
           cat trace-expansions.yml
    
    - command: expansions.update
      params:
        file: src/github.com/mongodb/terraform-provider-mongodbatlas/trace-expansions.yml
    
    - command: papertrail.trace
      params:
        key_id: ${papertrail_key_id}
        secret_key: ${papertrail_secret_key}
        product: "test-tf-provider-mongodbatlas"
        version: ${release_version}
        filenames:
          - "src/github.com/mongodb/terraform-provider-mongodbatlas/bin/*"

tasks:
  - name: trace_artifacts
    commands:
      - func: "trace artifacts"
  - name: say_hello2
    commands:
      - command: shell.exec
        params:
          script: |
            echo "Hello world 2 from the papertrail test task! - papertrail.yml"
            
buildvariants:
  - name: tfreleaser_papertrail_test
    display_name: "tfreleaser_papertrail_test"
    run_on:
      - rhel90-small
    expansions:
      <<: *go_linux_version
      server_version: "4.4.0-rc3"
      package_name: "terraform-provider-mongodbatlas"
      latest_deb: ~latest
      latest_rpm: .latest
      unstable: -unstable
      version:
    tasks:
      # - name: say_hello2
      - name: trace_artifacts